<h2>Now Playing...</h2>
    <!-- this div gets replace replaced with player iframe -->
    <iframe id="player" type="text/html" width="512" height="312"
  src="http://www.youtube.com/embed/?enablejsapi=1&origin=http://localhost"
  frameborder="0"></iframe>
    <br>
    <button onclick="myButtonFunction()" class="btn btn-success">My Play</button>
<%= form_tag("/play_next", method: "post") do %>
	<fieldset disabled>
		<div class="form-group">
			<%= text_field_tag(:now_playing, @current_track, class: "form-control") %>
		</div>
	</fieldset>
	<%= submit_tag("Play Next Song", class: "btn btn-lg btn-success") %>
<% end %>
<br>
<br>
<div class='col-md-1'>
	<h3>MusiQ!</h3>
</div>
<div class='col-md-1'>
	<br>
    <a class="btn btn-info" href="/player">Refresh</a>
</div>
<div class='col-md-12'>
   	<table class='table table-striped'>
		<tr>
			<th>Title</th>
			<th>Submitted @</th>
			<th>Submitted by</th>
		</tr>
		<% @tracks.each do |track| %>
   			<tr>
       			<td><%= track.title %></td>
       			<td><%= track.created_at %></td>
        		<td><%= track.user.name %></td>
   	  		</tr>  
   		<% end %>
   	</table>
</div>
    <script>
      // 2. This code loads the IFrame Player API code asynchronously.
      var tag = document.createElement('script');

      tag.src = "https://www.youtube.com/iframe_api";
      var firstScriptTag = document.getElementsByTagName('script')[0];
      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

      // 3. This function creates an <iframe> (and YouTube player)
      //    after the API code downloads.
      //  videoId: 'oShuuDsXHQE',
      var player;
      function onYouTubeIframeAPIReady() {
        player = new YT.Player('player', {
         // height: '390',   // included in iframe, when adding the element yourself
         // width: '640',
         // videoId: '',
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
        });
      }

      // 4. The API will call this function when the video player is ready.
      function onPlayerReady(event) {
       // event.target.playVideo();
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      function onPlayerStateChange(event) {
      //  if (event.data == YT.PlayerState.PLAYING && !done) {
      //  }
      }
      
      function stopVideo() {
        player.stopVideo();
      }

      function myButtonFunction() {
    //    player.loadVideoById({'videoId': '<%= @video_id %>'});
      }
  </script>